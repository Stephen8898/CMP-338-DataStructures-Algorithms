package com.classwork;

public class BetterArray {

	
	/*  int i = 5;
	 * int j;
	 *      post increment          pre increment
	 * j = i++;                j = ++i;
	 * 
	 * i = 6;
	 * j = 5;
	 * 
	 * 
	 * 
	 * For Linear search 
	 * another way to write this code
	 * for(i =0;  (a[i] <= t)&& (i<a.length); i++){
	 * 
	 * }
	 * 
	 */
	
	private final int DEFAULT_ARRAY_LENGTH = 10;
	private final int EMPTY = -1;
	
	private int sizeIncrease; 
	
	private int index = EMPTY;
	
	Object[] array;
	 public BetterArray () {
		 array = new Object[DEFAULT_ARRAY_LENGTH];
		 this.sizeIncrease = DEFAULT_ARRAY_LENGTH;
		 
	 }
	 public BetterArray(int length) {
		 array = new Object[length];
		 this.sizeIncrease = length;
		 this.index = EMPTY;
	 }
	
	 public boolean isEMPTY() {
		 return(index == EMPTY);
	 }
	
	
	 public void addObject(Object object) {
		 if(this.isFull()) {
			 
		 }
		 this.array[++this.index] = object;
		 
	 }
	 
	 public Object getObject(int index) {
		 Object obj = null;
		 
		 if(index > EMPTY && index < this.array.length && (index <= this.index)) {
			 obj = this.array[index];
		 }
		 
		 return obj;
	 }
	 
	 public void resetArray() {
		 this.index = EMPTY;
	 }
	 /********************************************/
	 /*   Private Methods                       */
	 /********************************************/
	 
	private boolean isFull() {
		 return(index == (array.length-1));
	 }
	
	 private void resizeArray() {
		 Object[] newArray = new Object[this.sizeIncrease];
		 this.sizeIncrease = this.sizeIncrease / 2;
		 
		 for(int i =0; i < array.length; i++) {
			 newArray[i] = this.array[i];
	    }		 this.array=newArray;
	 } 
}
